name: 'e-v-re Standard GitHub Action Build'
description: 'Runs the standard package creation'
inputs:
  NUGET_PACKAGE_TOKEN: 
    description: NuGet Package Token
    required: true
  Repository_Name:
    description: The name of the repository
    required: true
outputs:
  newVersion:
    description: "The new version"
    value: ${{ steps.bump.outputs.newVersion }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 #fetch-depth is needed for GitVersion

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
 
    - name: Set csproj, props version(s)
      id: update
      uses: vers-one/dotnet-project-version-updater@v1.6
      with:
        file: "./**/*.{csproj,props}"
        version: "bump-revision"

    - name: Update github version to ${{ steps.bump.outputs.newVersion }}
      shell: bash
      run: |
        git config user.name ${{ github.actor }}
        git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        git add .
        git commit -m "Bump project version to ${{ steps.update.outputs.newVersion }}"
        git push
        
    - name: Add Private e-v-re NuGet Registry
      shell: bash
      run: dotnet nuget add source --username plazarre --store-password-in-clear-text --name "Github e-v-re Private Repo" "https://nuget.pkg.github.com/e-v-re/index.json" --password ${{ inputs.NUGET_PACKAGE_TOKEN }}
      
    - name: Restore dependencies
      shell: bash
      run: dotnet restore
    
    - name: Build & Pack
      shell: bash
      run: dotnet build --no-restore /p:Version="${{ steps.update.outputs.newVersion }}"

    - name: Test
      shell: bash
      run: dotnet test --no-build --verbosity normal

    - name: Upload NuGet package to GitHub
    # ${{ inputs.Repository_Name }}
      uses: actions/upload-artifact@v4
      with:
        name: nugetPackage
        path: ./src/**/bin/Debug/*.nupkg

    - name: Merge Artifacts
      uses: actions/upload-artifact/merge@v4
      with:
        name: all-my-files
        pattern: **

    - name: Download nuget package artifact
      uses: actions/download-artifact@v4
      with:
        name: all-my-files

    - name: Show download directory
      shell: bash
      run: ls . -R
      
    - name: Push package to GitHub packages 
      shell: bash
      # if: needs.build.outputs.CommitsSinceVersionSource > 0 #Only release if there has been a commit/version change  
      run: dotnet nuget push "./nugetPackage/*.nupkg" --source "Github e-v-re Private Repo" --api-key ${{ inputs.NUGET_PACKAGE_TOKEN }} 

    - name: Create Release
      # if: 1 == 0 #needs.build.outputs.CommitsSinceVersionSource > 0 #Only release if there has been a commit/version change
      uses: actions/create-release@v1
      # uses: comnoco/create-release-action@v2.0.5
      env:
        GITHUB_TOKEN: ${{ inputs.NUGET_PACKAGE_TOKEN }} 
      with:
        tag_name: "v${{steps.update.outputs.newVersion}}"
        release_name: Release ${{steps.update.outputs.newVersion}}
    
